ext.project_version = getProjectVersion()

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/typesafe/maven-releases" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group = "${project_group}"
    version = "${project_version}"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    jar {
        manifest.attributes
        exclude('**/*.java')
    }

    dependencies {
        testCompile (
                "org.spockframework:spock-core:${spock_version}"
        )
        testRuntime (
                "cglib:cglib-nodep:${cglib_version}",           // allows mocking of classes (in addition to interfaces)
                "org.objenesis:objenesis:${objenesis_version}"  // allows mocking of classes without default constructor (together with CGLIB)
        )
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    check.dependsOn jacocoTestReport
}

task wrapper(type: Wrapper) {
    gradleVersion = "${gradle_version}"
}

def getProjectVersion() {
    def release = project.hasProperty("project_release") ? project.project_release.toBoolean() : null
    def rcno = project.hasProperty("project_rcno") ? project.project_rcno.toInteger() : null
    def prjVer = "${project_version_major}.${project_version_minor}.${project_version_fix}"
    if (release) {
        return "${prjVer}-release"
    } else if (rcno > 0) {
        return "${prjVer}-rc${rcno}"
    } else {
        def timestampFormat = new java.text.SimpleDateFormat('yyyyMMddHHmmss')
        timestampFormat.timeZone = TimeZone.getTimeZone("UTC")
        def ts = timestampFormat.format(new Date())
        return "${prjVer}-${ts}"
    }
}

def getMavenRepo() {
    if (project.project_release.toBoolean()) {
        return 'maven-release'
    } else {
        return 'maven-snapshot'
    }
}
